{"version":3,"sources":["components/Search.js","components/GithubUser.js","components/followers.js","components/following.js","components/GithubRepo.js","components/repos.js","components/User.js","App.js","index.js"],"names":["Search","props","useState","userInput","setUserInput","className","onSubmit","e","preventDefault","history","push","value","onChange","target","type","GithubUser","user","to","src","avatar_url","alt","login","Followers","Infinite","require","followers","setFollowers","page","setPage","fetchData","a","axios","match","params","username","result","concat","data","useEffect","isInfiniteLoading","onInfiniteLoad","useWindowAsScrollContainer","elementHeight","infiniteLoadBeginBottomOffset","map","key","id","Following","following","setFollowing","GithubRepo","href","url","full_name","stargazers_count","repos","setRepos","User","setUser","stats","name","public_repos","bio","stat","path","component","Repos","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.663650fd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n/*\r\nThis component displays a form where the user can enter a GitHub username\r\nWhen they submit the form either by pressing ENTER or clicking the button,\r\nwe will use react-router's history.push function to push a new URL to the history.\r\n\r\nThis will have as an effect to navigate to a new URL, which will display the User component\r\nWhy are we doing this instead of using a <Link>? The answer is straightforward, but make sure you understand!!!\r\n*/\r\nconst Search = (props) => {\r\n\r\n    const [userInput, setUserInput] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.history.push(`/user/${userInput}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-page\">\r\n            <h2>Enter a GitHub username</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input value={userInput} onChange={e => { setUserInput(e.target.value)}} className=\"search-page__input\" type=\"text\" />\r\n                <button className=\"search-page__button\">Search</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GithubUser = ({user}) => {\r\n  return (\r\n    <div>\r\n      <Link to=\"/user/gaearon\">\r\n        <img src={user.avatar_url} alt=\"Follower\" />\r\n        <p>{user.login} </p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GithubUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport GithubUser from \"./GithubUser\";\r\n\r\nconst Followers = props => {\r\n  let Infinite = require(\"react-infinite\");\r\n\r\n  const [followers, setFollowers] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n\r\n\r\n  const fetchData = async () => {\r\n    const result = await axios (`https://api.github.com/users/${props.match.params.username}/followers?page=${page}&per_page=50`)\r\n\r\n    setFollowers(followers.concat(result.data));\r\n    setPage(page + 1);\r\n  };\r\n\r\n      useEffect(() => {\r\n        fetchData();\r\n    }, [props.match.params.username]);\r\n\r\n\r\n  // const elementInfiniteLoad = () => {\r\n  //   return <div className=\"infinite-list-item\">Loading...</div>;\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Followers of {props.match.params.username}</h3>\r\n      <Infinite\r\n\r\n        isInfiniteLoading={!followers}\r\n        onInfiniteLoad={fetchData}\r\n        useWindowAsScrollContainer\r\n        elementHeight={460}\r\n        infiniteLoadBeginBottomOffset={100}\r\n        // loadingSpinnerDelegate={elementInfiniteLoad()}\r\n      >\r\n      {\r\n        followers.map(user => <GithubUser user={user} key={user.id} />)\r\n      }\r\n      </Infinite>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Followers;\r\n","import React, { useState,useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport GithubUser from './GithubUser';\r\n\r\nconst Following = props => {\r\n  let Infinite = require(\"react-infinite\");\r\n\r\n    const [following, setFollowing] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const fetchData = async () => {\r\n      const result = await axios (`https://api.github.com/users/${props.match.params.username}/following?page=${page}&per_page=50`)\r\n  \r\n      setFollowing(following.concat(result.data));\r\n      setPage(page + 1);\r\n    };\r\n  \r\n        useEffect(() => {\r\n          fetchData();\r\n      }, [props.match.params.username]);\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h3>Following {props.match.params.username}</h3>\r\n      <Infinite\r\n\r\n        isInfiniteLoading={!following}\r\n        onInfiniteLoad={fetchData}\r\n        useWindowAsScrollContainer\r\n        elementHeight={460}\r\n        infiniteLoadBeginBottomOffset={100}\r\n\r\n      >\r\n      {\r\n        following.map(user => <GithubUser user={user} key={user.id} />)\r\n      }\r\n      </Infinite>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Following;\r\n","import React from \"react\";\r\n\r\nconst GithubRepo = ({ user }) => {\r\n\r\n  return (\r\n    <div>\r\n      <a href={user.url} target=\"_blank\">\r\n        {user.full_name}\r\n      </a>\r\n      <span className='stargazer'>{user.stargazers_count}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GithubRepo;\r\n","import React, { useState,useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport GithubRepo from './GithubRepo';\r\n\r\nconst Followers = props => {\r\n  let Infinite = require(\"react-infinite\");\r\n\r\n    const [repos, setRepos] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n\r\n    const fetchData = async () => {\r\n      const result = await axios (`https://api.github.com/users/${props.match.params.username}/repos?page=${page}&per_page=50`)\r\n  \r\n      setRepos(repos.concat(result.data));\r\n      setPage(page + 1);\r\n    };\r\n  \r\n        useEffect(() => {\r\n          fetchData();\r\n      }, [props.match.params.username]);\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h3>Following {props.match.params.username}</h3>\r\n      <Infinite\r\n\r\n        isInfiniteLoading={!repos}\r\n        onInfiniteLoad={fetchData}\r\n        useWindowAsScrollContainer\r\n        elementHeight={10}\r\n        infiniteLoadBeginBottomOffset={100}\r\n\r\n      >\r\n      {\r\n        repos.map(user => <GithubRepo user={user} key={user.id} />)\r\n      }\r\n      </Infinite>\r\n    </div>\r\n\r\n    // <div className=\"followers-page\">\r\n    //   <h3>{props.match.params.username} repos</h3>\r\n    //     {repos.map((user, i) => <GithubRepo user={user} key={i}/>)}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Followers;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Followers from './followers';\r\nimport Following from './following';\r\nimport Repos from './repos';\r\n\r\nconst User = (props) => {\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    const stats = [\r\n        {\r\n            name: 'Public Repos',\r\n            value: user.public_repos,\r\n            url: `/user/${props.match.params.username}/repos`\r\n        },\r\n        {\r\n            name: 'Followers',\r\n            value: user.followers,\r\n            url: `/user/${props.match.params.username}/followers`\r\n        },\r\n        {\r\n            name: 'Following',\r\n            value: user.following,\r\n            url: `/user/${props.match.params.username}/following`\r\n        }\r\n    ];\r\n\r\n    /*\r\n    This method will be called by React after the first render. It's a perfect place to load data with AJAX. This User component gets mounted in the DOM as soon as the URL is /user/:username\r\n\r\n    When that happens, react-router will pass a `params` prop containing every parameter in the URL. Here, it's props.match.params. Since we called our route parameter `username`, it's available under props.match.params.username\r\n\r\n    We're using it to make an API call to GitHub to fetch the user data for the username in the URL. Once we receive the data -- in the callback -- we put the user data in our state. This will trigger a re-render.\r\n    When `render` gets called again, `user` exists and we get the user info display instead of \"LOADING...\"\r\n    */\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                `https://api.github.com/users/${props.match.params.username}`\r\n            );\r\n            setUser(result.data);\r\n        };\r\n\r\n        fetchData();\r\n    }, [props.match.params.username]);\r\n\r\n\r\n    /*\r\n    This method is used as a mapping function. Eventually this could be factored out to its own component.\r\n    */\r\n    const renderStat = (stat) => {\r\n        return (\r\n            <li key={stat.name} className=\"user-info__stat\">\r\n                <Link to={stat.url}>\r\n                    <p className=\"user-info__stat-value\">{stat.value}</p>\r\n                    <p className=\"user-info__stat-name\">{stat.name}</p>\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return !user\r\n        // If the state doesn't have a user key, it means the AJAX didn't complete yet. Simply render a LOADING indicator.\r\n        ? <div className=\"user-page\">LOADING...</div>\r\n        : (\r\n            <div className=\"user-page\">\r\n                <div className=\"user-info\">\r\n                    <Link className=\"user-info__text\" to={`/user/${user.login}`}>\r\n                        <img className=\"user-info__avatar\" src={user.avatar_url} alt={`${user.login} avatar`} />\r\n                        <h2 className=\"user-info__title\">{user.login} ({user.name})</h2>\r\n                        <p className=\"user-info__bio\">{user.bio}</p>\r\n                    </Link>\r\n\r\n                    <ul className=\"user-info__stats\">\r\n                        {stats.map(renderStat)}\r\n                    </ul>\r\n                </div>\r\n                <Route path={`${props.match.path}/followers`} component={Followers}/>\r\n                <Route path={`${props.match.path}/following`} component={Following}/>\r\n                <Route path={`${props.match.path}/repos`} component={Repos}/>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport Search from './components/Search';\r\nimport User from './components/User';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"main-app\">\r\n            <header className=\"main-header\">\r\n                <h1><Link to=\"/\">React GitHub Project</Link></h1>\r\n            </header>\r\n            <main className=\"main-content\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Search} />\r\n                    <Route path=\"/user/:username\" component={User} />\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n"],"sourceRoot":""}